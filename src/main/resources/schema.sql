CREATE TABLE IF NOT EXISTS mpa (
    mpa_id           integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    mpa_name         VARCHAR(150) NOT NULL
);
CREATE TABLE IF NOT EXISTS films (
    film_id          integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    film_name             varchar(255) NOT NULL,
    film_description      varchar(200),
    release_date     date         NOT NULL,
    film_duration         integer      NOT NULL,
    mpa_id           integer REFERENCES mpa (mpa_id)
);
CREATE TABLE IF NOT EXISTS genres (
    genre_id         integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    genre_name       VARCHAR(150) NOT NULL,
    CONSTRAINT unique_genre UNIQUE (genre_name)
);
CREATE TABLE IF NOT EXISTS film_genres (
    film_id          integer REFERENCES films (film_id),
    genre_id         integer REFERENCES genres (genre_id),
    CONSTRAINT unique_film_genre UNIQUE (film_id, genre_id)
);
CREATE TABLE IF NOT EXISTS users (
    user_id          integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    user_email            VARCHAR(200)  NOT NULL,
    user_login            VARCHAR(200)   NOT NULL,
    user_name             VARCHAR(150),
    user_birthday         date          NOT NULL,
    CONSTRAINT unique_user_email UNIQUE (user_email),
    CONSTRAINT unique_user_login UNIQUE (user_login)
);
CREATE TABLE IF NOT EXISTS likes (
    film_id         integer REFERENCES films (film_id),
    user_id         integer REFERENCES users (user_id),
    CONSTRAINT "likes_pk" PRIMARY KEY (user_id, film_id)
);
CREATE TABLE IF NOT EXISTS friends (
    user_id integer REFERENCES users (user_id) NOT NULL,
    friend_id integer REFERENCES users (user_id) NOT NULL,
    CONSTRAINT "friends_pk" PRIMARY KEY (user_id, friend_id)
);